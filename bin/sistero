#!/usr/bin/env ruby

require 'bundler/setup'
require 'sistero'
require 'optparse-subcommand'

module Sistero::Command
  @config = OpenStruct.new

  def self.with_help op
    op.on_tail '-h', '--help', 'show this help message' do
      puts op
      exit
    end
  end

  def self.run args
    SubcommandOptionParser.new do |op|
      op.banner = 'usage: sistero [global options] command [command options]'
      with_help op

      op.on '-c', '--config file', 'override path to config file' do |cfg_file_path|
        @config.cfg_file_path = cfg_file_path
      end

      op.subcommand 'ssh', 'ssh to vm' do |subop|
        subop.on '-o val', 'add ssh options' do |ssh_options|
          @config.ssh_options = ssh_options
        end
      end

      help = method(:with_help)
      op.subcommand 'create', 'create vm', &help
      op.subcommand 'destroy', 'destroy vm', &help
      op.subcommand 'list', 'list vms', &help
      op.subcommand 'show-config', 'show configuration', &help
      op.subcommand 'ssh-keys', 'show ssh keys', &help
      op.subcommand 'sizes', 'show possible sizes', &help
      op.subcommand 'regions', 'show possible regions', &help
      op.subcommand 'images', 'show images', &help

      @config.cmd, @config.args = op.parse args
    end

    unless @config.cmd
      puts 'please supply a command, see --help'
      exit
    end

    sistero = Sistero::Instance.new({ cfg_file_path: @config.cfg_file_path })
    case @config.cmd
    when 'ssh'
      vm_name, *ssh_args = @config.args
      # TODO: pass ssh_args
      sistero.ssh_to_vm(vm_name, ssh_options: @config.ssh_options)
    when 'create'
      vms = @config.args.empty? ? [nil] : @config.args
      vms.each { |vm_name| sistero.create_vm(vm_name) }
    when 'destroy'
      vms = @config.args.empty? ? [nil] : @config.args
      vms.each { |vm_name| sistero.destroy_vm(vm_name) }
    when 'list'
      sistero.list_vms()
    when 'show-config'
      sistero.show_config()
    when 'ssh-keys'
      sistero.show_ssh_keys()
    when 'sizes'
      sistero.show_sizes()
    when 'regions'
      sistero.show_regions()
    when 'images'
      sistero.show_images()
    end
  rescue RuntimeError => e
    puts e.to_s
  end
end

Sistero::Command::run ARGV
